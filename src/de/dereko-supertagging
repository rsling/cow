#!/bin/bash

# Pass input file (gz), output file (gz).

# Define envvars:
#    TT_MODEL_DE   (TT model abs. path)
#    TT_LEXIC_DE   (additional lexicon abs, path)
#    TT_TMP        (TMP path for ad-hoc lexicon and tmp tagging)
#    TT_FILTER     (full path to filter-german-tags)

set -e
set -u


export LC_ALL=C # Felix: set this or sort will not work as expected (reset at the end)

TT_MODEL_DE="$HOME/NLP/TT/lib/german-utf8.par"
TT_LEXIC_DE="$HOME/NLP/cow/src/de/lexicon"
TT_TMP="$HOME/tmp.supertagging"
TT_FILTER="$HOME/NLP/TT/cmd/filter-german-tags"


OPTS="-token -lemma -sgml -cap-heuristics -hyphen-heuristics -quiet"

# Generate ad-hoc-NN-lexicon for pretagging.
rnd=${RANDOM}
lexf="${TT_TMP}/$(basename ${1})_${rnd}_nnlexicon"
tmpf="${TT_TMP}/$(basename ${2})_${rnd}_tmp.gz"
tmpprefix="${TT_TMP}/$(basename ${2})_${rnd}_tmp"


# 1. Generate unknown list for pretagging.
gunzip -c ${1} | cut -f 1 | tree-tagger $OPTS -lex ${TT_LEXIC_DE} $TT_MODEL_DE | gzip -c > ${tmpf}

# 2. Get SMOR analyses for unknowns.
gunzip -c ${tmpf} | grep '	<unknown>' | cut -f 1 | smor-lemmatizer | sed 's/	\([A-Z]\+\|$\.\)\.[^	 ]\+/	\1/' | grep 'ADJ.\|NN\|NE' | sort -u | cow16-lexcompactor > ${lexf}_tmp

# 2a. Normalize lemmas that contain quotes ("Pseudo"-Wissenschaft --> Pseudo-Wissenschaft)
paste <(cut -f 1 ${lexf}_tmp) <(cut -f 2- ${lexf}_tmp | sed '/-/ s/"//g'| sed "/-/ s/'//g") > ${lexf}

#gunzip -c ${tmpf} | grep '	<unknown>' | cut -f 1 > ${tmpprefix}_0
#smor-lemmatizer < ${tmpprefix}_0 > ${tmpprefix}_1
#sed 's/	\([A-Z]\+\|$\.\)\.[^	 ]\+/	\1/' ${tmpprefix}_1 > ${tmpprefix}_2
#grep 'ADJ.\|NN\|NE' ${tmpprefix}_2 > ${tmpprefix}_3
#sort -u ${tmpprefix}_3 > ${tmpprefix}_4
#cow16-lexcompactor < ${tmpprefix}_4 > ${lexf}




# 3. Final run with additional lexicon.
gunzip -c ${1} | cut -f 1 |
# Preserve sentence endings.
  sed 's/^$/\n<SÄTZÄNDÖ>\n/' |
  tree-tagger $OPTS -lex <(cat ${lexf} ${TT_LEXIC_DE}) $TT_MODEL_DE |
  ${TT_FILTER} |
# Restore sentence ending blank lines.
  sed 's/^<SÄTZÄNDÖ>$//' |
# fix dupblank etc. annotation
  sed 's/^\(dupblank\|uriblank\|emailblank\|hashtagblank\|noiseblank\)	.\+$/\1	XY	(blank)/' |
# fix annotation of major smileys
  sed 's/^\([:;8=|\[][-o]\{0,1\}[][(){}OoKSsDPp]\+\)	.\+$/\1	XY	(smiley)/' |
  sed 's/^\&lt;3	.\+$/\&lt;3	XY	(smiley)/' |
  sed 's/^\&lt;\/3	.\+$/\&lt;\/3	XY	(smiley)/' |
  sed 's/^\(:[a-zäöüß]\+:\)	.\+$/\1	XY	(phpbbemo)/' |
  sed 's/^\(\*[a-zäöüßA-ZÄÖÜ0-9-]\+\*\)	.\+$/\1	XY	(asteriskative)/' |
# replace XML-unfriendly <unknown>
  sed 's/<unknown>$/(unknown)/' |
  sed 's/<UNKNOWN>$/(unknown)/' | gzip -c > ${2}

#\rm ${tmpf}
#\rm ${lexf}
#\rm ${lexf}_tmp

